install.packages("synapser", repos = c("http://ran.synapse.org", "http://cran.fhcrc.org"))

library(synapser)

synLogin(email = "~", password = "~")
# Welcome,  !NULL

synRNA <- synGet( "syn2701943", downloadLocation = "~/Downloads/PCBC" )


library(tidyverse)

exp <- read_delim(file = synRNA$path) %>%
  separate(col = "tracking_id", sep = "\\.", into = c("Ensembl_ID", "suffix")) %>%
  dplyr::select(-suffix) %>%
  column_to_rownames("Ensembl_ID") %>%
  as.matrix()

##### exp[1:3,1:3]
H9.102.2.5 H9.102.2.6 H9.119.3.7
ENSG00000000003  0.6306521  0.6071539  0.7197784
ENSG00000000005 -1.2838794 -1.0152271 -0.8893850
ENSG00000000419  0.6509436  0.5833117  0.7618753

##ENSEMBL to Symbol

library(org.Hs.eg.db)

unimap <- mapIds(
  org.Hs.eg.db, keys = rownames(exp), keytype = "ENSEMBL", 
  column = "SYMBOL", multiVals = "filter"
)

data.exp <- exp[names(unimap),]
rownames(data.exp) <- unimap


synMeta <- synTableQuery("SELECT UID, Diffname_short FROM syn3156503")


##maybe error

metaInfo <- synMeta$asDataFrame() %>%
  dplyr::select(UID, Diffname_short) %>%
  column_to_rownames("UID") %>%
  filter(!is.na(Diffname_short))

##use these
meta=synMeta$asDataFrame() %>%  dplyr::select(UID, Diffname_short)
meta=meta[-c(237:252),]
row.names(meta)=NULL
metaInfo=column_to_rownames(meta,"UID") 


X <- data.exp  
y <- metaInfo[colnames(X), ]
names(y) <- colnames(X)

##### head(y)
H9.102.2.5    H9.102.2.6    H9.119.3.7    H9.119.5.3    H9.144.7.7 H9EB.558.12.6 
"SC"          "SC"          "SC"          "SC"          "SC"          "EB" 


##2. model


library('gelnet')
##gelnet(X, y, l1, l2)

X <- data.exp
m <- apply(X, 1, mean)
X <- X - m

sc <- which(y == "SC")
X.sc <- X[, sc]
X.or <- X[, -sc]

model.RNA <- gelnet(t(X.sc), NULL, 0, 1)


#head(model.RNA$w)
TSPAN6          TNMD          DPM1         SCYL3      C1orf112         FUCA2 
6.828043e-05  3.261994e-03  3.170824e-04 -1.860469e-05  1.114508e-03  2.916178e-04 


#save model

save(X, y, model.RNA, file = "~\\model.rda")


setwd('~\\dataandcode')

exp=read.table('GSE30219input.txt',header = T,row.names = 1,sep = "\t")

# exp[1:3, 1:3]
GSM748053 GSM748054 GSM748055
MIR4640///DDR1 10.641732 10.131972 10.868626
RFC2            6.952820  7.978193  8.187504
HSPA6           6.633055  6.436403  6.482687



load('~\\model.rda')



common <- intersect(names(model.RNA$w), rownames(exp))
X <- exp[common, ]
w <- model.RNA$w[common]


score <- apply(X, 2, function(z) {cor(z, w, method="sp", use="complete.obs")})
score <- score - min(score)
score <- score / max(score)


# head(score)
GSM748053 GSM748054 GSM748055 GSM748056 GSM748057 GSM748058 
0.1940480 0.3041642 0.4201453 0.2656743 0.3761652 0.1763717 


#function


predict.mRNAsi <- function(exp, modelPath='model.rda') {
  load(modelPath)
  
  common <- intersect(names(model.RNA$w), rownames(exp))
  X <- exp[common, ]
  w <- model.RNA$w[common]
  
  score <- apply(X, 2, function(z) {cor(z, w, method="sp", use="complete.obs")})
  score <- score - min(score)
  score <- score / max(score)
}
score <- predict.mRNAsi(exp, '~\\model.rda')


